variables:
  DOCKER_HOST: tcp://docker:2375
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: ""

workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS
      when: never
    - if: $CI_COMMIT_BRANCH
    - if: $CI_COMMIT_TAG

services:
  - name: ${CI_DEPENDENCY_PROXY_DIRECT_GROUP_IMAGE_PREFIX}/docker:dind
    alias: docker

stages:
  - test
  - deploy
  - publish

lint Helm Charts:
  image:
    name: ${CI_DEPENDENCY_PROXY_DIRECT_GROUP_IMAGE_PREFIX}/alpine/helm
    entrypoint: ["/bin/sh", "-c"]
  stage: test
  script:
    - helm dependency update
    - bash run_tests.sh --lint

test Helm Charts:
  image:
    name: ${CI_DEPENDENCY_PROXY_DIRECT_GROUP_IMAGE_PREFIX}/alpine/helm
    entrypoint: ["/bin/sh", "-c"]
  stage: test
  script:
    - helm dependency update
    - helm plugin install https://github.com/helm-unittest/helm-unittest --version 0.7.0
    - bash run_tests.sh --unit

integration Tests Helm Charts Mariadb:
  variables:
    ROOTLESS: false
  image: ${CI_DEPENDENCY_PROXY_DIRECT_GROUP_IMAGE_PREFIX}/docker:dind
  script:
    - |
      apk update && apk add -U curl bash
      sleep 10 # Wait for docker service
      bash run_tests.sh --integration

integration Tests Helm Charts Mariadb no TLS:
  variables:
    ROOTLESS: false
  image: ${CI_DEPENDENCY_PROXY_DIRECT_GROUP_IMAGE_PREFIX}/docker:dind
  script:
    - |
      apk update && apk add -U curl bash
      sleep 10 # Wait for docker service
      bash run_tests.sh --integration -p http

integration Tests Helm Charts Mariadb Rootless:
  variables:
    ROOTLESS: true
  extends: integration Tests Helm Charts Mariadb

integration Tests Helm Charts Postgresql:
  variables:
    ROOTLESS: false
  image: ${CI_DEPENDENCY_PROXY_DIRECT_GROUP_IMAGE_PREFIX}/docker:dind
  script:
    - |
      apk update && apk add -U curl bash
      sleep 10 # Wait for docker service
      bash run_tests.sh --integration -d postgresql

integration Tests Helm Charts Postgresql Rootless:
  variables:
    ROOTLESS: true
  extends: integration Tests Helm Charts Postgresql

publish:
  stage: publish
  image: ${CI_DEPENDENCY_PROXY_DIRECT_GROUP_IMAGE_PREFIX}/alpine/helm
  variables:
    REPO_BUCKET: "download.passbolt.com"
    REPO_DIR: "charts"
    CHART_NAME: "passbolt"
  script:
    - |
      export GOOGLE_APPLICATION_CREDENTIALS="$BUCKET_SVC_ACC"
      sh .gitlab-ci/scripts/bin/publishing.sh
  rules:
    - if: "$CI_COMMIT_TAG"
      when: on_success
